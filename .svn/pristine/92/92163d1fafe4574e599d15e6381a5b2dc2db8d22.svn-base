package com.group0931.triagephase2;

import java.io.Serializable;

/**
 * A person's name, with a first name, middle name(s), and last name.
 * @author Christina Chung, Asher MindenWebb, Angel You.
 *
 */
public class PersonName implements Serializable {
	private static final long serialVersionUID = 1L;
	
	/** A list containing this person's name.*/
	private String[] allNames;
	
	/**String representation of this person's name.*/
	private String fullName;
	
	/**
	 * Creates a person's name, from a surname, given name, and middle name. 
	 * @param lastName This person's last name.
	 * @param firstName This person's first name.
	 * @param midName This person's middle name. 
	 */
	public PersonName(String lastName, String firstName, String midName) { 
		this.allNames = new String[3];
		allNames[0] = firstName;
		allNames[1] = midName;
		allNames[2] = lastName;
		afterChange();
	}
	
	/**
	 * Creates a person's name, from a surname and given name. 
	 * @param lastName This person's last name.
	 * @param firstName This person's first name.	
	 */
	public PersonName(String lastName, String firstName){
		this.allNames = new String[2];
		allNames[0] = firstName;
		allNames[1] = lastName;
		afterChange();
	}
	
	/** 
	 * Constructs a person's name given a full name.
	 * (If split names are not available use this constructor 
	 * to create a name.)
	 * @param fullName This person's full name
	 */
	public PersonName(String fullName){
		System.out.println(fullName);
		this.fullName = fullName;
		
		// Breaks the name into sub-names (delineated by whitespace)
		int firstSpace = fullName.indexOf(" ");
		int lastSpace = fullName.lastIndexOf(" ");
		String firstName = fullName.substring(0, firstSpace);
		String lastName = fullName.substring(lastSpace+1);
		String midName = fullName.substring(firstSpace+1, lastSpace + 1);
		this.allNames = new String[3];
		allNames[0] = firstName;
		allNames[1] = midName;
		allNames[2] = lastName;
	}

	
	/**
	 * Combines all of this person's names into 
	 * instance variable {@code String fullName}.
	 */
	private void afterChange(){
		
		// Appends each sub-name into a single StringBuilder
		StringBuilder fullName = new StringBuilder();
		for (String name : this.allNames){
			fullName.append(name + " ");
		}
		// Deletes the trailing space
		fullName.deleteCharAt(fullName.length() - 1);
		this.fullName = new String(fullName);
	}
	
	/**
	 * Returns the middle name(s) of this person. 
	 * @return middle name(s) as a string.
	 */
	public String getMidName() {
		// Finds all of the elements between the first and last names
		return this.allNames[1];
	}
	
	/**
	 * Sets this person's middle name(s).
	 * @param midName This peron's middle name.
	 */
	public void setMidName(String midName) {
		this.allNames[1] = midName;
		afterChange();
	}
	
	/**
	 * Returns the first name of this person.
	 * @return The first name of this person.
	 */
	public String getFirstName() {
		return this.allNames[0];
	}
	
	/**
	 * Sets the first name of this person.
	 * @param firstName The first name of this person.
	 */
	public void setFirstName(String firstName) {
		this.allNames[0] = firstName;
		afterChange();
	}
	
	/**
	 * Returns the last name of this person.
	 * @return The last name of this person.
	 */
	public String getLastName() {
		return this.allNames[2];
	}
	
	/**
	 * Sets the last name of this person.
	 * @param The last name of this person.
	 */
	public void setLastName(String lastName) {
		 this.allNames[2] = lastName;
		 afterChange();
	}

	@Override
	public String toString(){
		return this.fullName;
	}
}
